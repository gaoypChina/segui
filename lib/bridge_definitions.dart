// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.75.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';

abstract class Api {
  Future<String> showDnaUppercase({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kShowDnaUppercaseConstMeta;

  Future<SegulApi> newStaticMethodSegulApi({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kNewStaticMethodSegulApiConstMeta;

  Future<void> concatAlignmentMethodSegulApi(
      {required SegulApi that,
      required String outputFmt,
      required String partitionFmt,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kConcatAlignmentMethodSegulApiConstMeta;

  Future<void> convertSequenceMethodSegulApi(
      {required SegulApi that,
      required String outputFmt,
      required bool sort,
      dynamic hint});

  FlutterRustBridgeTaskConstMeta get kConvertSequenceMethodSegulApiConstMeta;
}

class SegulApi {
  final Api bridge;
  final String dirPath;
  final String fileFmt;
  final String datatype;
  final String output;

  const SegulApi({
    required this.bridge,
    required this.dirPath,
    required this.fileFmt,
    required this.datatype,
    required this.output,
  });

  static Future<SegulApi> newSegulApi({required Api bridge, dynamic hint}) =>
      bridge.newStaticMethodSegulApi(hint: hint);

  Future<void> concatAlignment(
          {required String outputFmt,
          required String partitionFmt,
          dynamic hint}) =>
      bridge.concatAlignmentMethodSegulApi(
        that: this,
        outputFmt: outputFmt,
        partitionFmt: partitionFmt,
      );

  Future<void> convertSequence(
          {required String outputFmt, required bool sort, dynamic hint}) =>
      bridge.convertSequenceMethodSegulApi(
        that: this,
        outputFmt: outputFmt,
        sort: sort,
      );
}
